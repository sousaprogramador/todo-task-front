name: Deploy to S3

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.5

    - name: Terraform Init
      working-directory: ./infra
      run: terraform init

    - name: Terraform Apply
      working-directory: ./infra
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform apply -auto-approve

    - name: Extract Terraform Outputs
      id: extract_outputs
      working-directory: ./infra
      run: |
        echo "Extracting Terraform Outputs..."

        # Captura direta do JSON com isolamento
        JSON_OUTPUT=$(terraform output -json 2>/dev/null)

        # Verifica se JSON foi capturado corretamente
        if ! echo "$JSON_OUTPUT" | jq empty; then
          echo "Erro: O output do Terraform não é um JSON válido."
          exit 1
        fi

        # Extrai valores usando jq
        S3_BUCKET=$(echo "$JSON_OUTPUT" | jq -r '.s3_bucket_name.value')
        S3_WEBSITE_URL=$(echo "$JSON_OUTPUT" | jq -r '.s3_website_url.value')

        # Verifica se os valores extraídos são válidos
        if [[ -z "$S3_BUCKET" || -z "$S3_WEBSITE_URL" ]]; then
            echo "Erro: Um ou ambos os outputs estão vazios ou inválidos."
            exit 1
        fi

        # Define variáveis de ambiente para uso posterior
        echo "S3_BUCKET=$S3_BUCKET" >> $GITHUB_ENV
        echo "S3_WEBSITE_URL=$S3_WEBSITE_URL" >> $GITHUB_ENV

    - name: Deploy to S3
      run: |
        echo "Deploying to S3..."
        echo "Using S3_BUCKET: $S3_BUCKET"
        echo "Using S3_WEBSITE_URL: $S3_WEBSITE_URL"
        aws s3 sync ./build s3://$S3_BUCKET --delete
        aws s3 website s3://$S3_BUCKET --index-document index.html --error-document error.html
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        S3_BUCKET: ${{ env.S3_BUCKET }}
        S3_WEBSITE_URL: ${{ env.S3_WEBSITE_URL }}
