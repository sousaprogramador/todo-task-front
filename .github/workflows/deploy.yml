name: Deploy Static Site to S3

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.1.6

    - name: Terraform Init
      working-directory: ./infra
      run: terraform init

    - name: Terraform Apply
      id: apply
      working-directory: ./infra
      run: |
        terraform apply -auto-approve -no-color 2>&1 | tee terraform_output.log
        if [ ${PIPESTATUS[0]} -ne 0 ]; then
          echo "Terraform apply falhou."
          exit 1
        fi
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Upload Terraform Error Log
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: terraform-output-log
        path: ./infra/terraform_output.log

    - name: Extract Terraform Outputs
      id: outputs
      working-directory: ./infra
      run: |
        echo "s3_bucket_name=$(terraform output -raw s3_bucket_name)" >> $GITHUB_ENV
        echo "s3_website_url=$(terraform output -raw s3_website_url)" >> $GITHUB_ENV

  deploy:
    runs-on: ubuntu-latest
    needs: terraform

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm install

    - name: Build site
      run: npm run build

    - name: Deploy to S3
      env:
        AWS_REGION: "sa-east-1"
        S3_BUCKET: ${{ env.s3_bucket_name }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws s3 sync ./build s3://$S3_BUCKET --delete
        aws s3 website s3://$S3_BUCKET/ --index-document index.html --error-document error.html

    - name: Verify S3 Website
      run: |
        curl -I ${{ env.s3_website_url }}
