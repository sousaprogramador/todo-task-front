name: Deploy Static Site to S3

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.5

    - name: Terraform Init
      working-directory: ./infra
      run: terraform init

    - name: Terraform Apply
      id: apply
      working-directory: ./infra
      run: terraform apply -auto-approve -no-color
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Extract Terraform Outputs
      id: extract-outputs
      working-directory: ./infra
      run: |
        echo "Extracting Terraform Outputs..."

        # Redirecionar saídas para arquivos temporários
        terraform output -raw s3_bucket_name > s3_bucket_name.txt
        terraform output -raw s3_website_url > s3_website_url.txt

        # Capturar apenas o conteúdo necessário removendo mensagens indesejadas
        S3_BUCKET=$(head -n 1 s3_bucket_name.txt | tr -d '\r' | tr -d '\n')
        S3_WEBSITE_URL=$(head -n 1 s3_website_url.txt | tr -d '\r' | tr -d '\n')

        # Garantir que as saídas não estão vazias
        if [[ -z "$S3_BUCKET" || -z "$S3_WEBSITE_URL" ]]; then
          echo "Erro ao extrair saídas do Terraform"
          exit 1
        fi

        # Configurar variáveis de ambiente para a próxima etapa
        echo "S3_BUCKET=$S3_BUCKET" >> $GITHUB_ENV
        echo "S3_WEBSITE_URL=$S3_WEBSITE_URL" >> $GITHUB_ENV

        # Limpar arquivos temporários
        rm s3_bucket_name.txt s3_website_url.txt

        # Saída de debug para confirmação
        echo "S3_BUCKET=$S3_BUCKET"
        echo "S3_WEBSITE_URL=$S3_WEBSITE_URL"
      shell: bash

    - name: Deploy to S3
      run: |
        echo "Deploying to S3..."
        aws s3 sync ./build s3://${{ env.S3_BUCKET }} --delete
        aws s3 website s3://${{ env.S3_BUCKET }}/ --index-document index.html --error-document error.html
      env:
        AWS_REGION: "sa-east-1"
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
