name: Deploy Static Site to S3

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.5

    - name: Terraform Init
      working-directory: ./infra
      run: terraform init

    - name: Terraform Apply
      id: apply
      working-directory: ./infra
      run: terraform apply -auto-approve -no-color
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Extract Terraform Outputs
      id: extract-outputs
      working-directory: ./infra
      run: |
        echo "Extracting Terraform Outputs..."
        
        # Capture Terraform output
        S3_BUCKET=$(terraform output -raw s3_bucket_name 2>/dev/null || echo "ERROR")
        S3_WEBSITE_URL=$(terraform output -raw s3_website_url 2>/dev/null || echo "ERROR")

        # Print outputs for debugging
        echo "S3_BUCKET=${S3_BUCKET}"
        echo "S3_WEBSITE_URL=${S3_WEBSITE_URL}"

        # Check for errors and set outputs
        if [ "$S3_BUCKET" == "ERROR" ] || [ "$S3_WEBSITE_URL" == "ERROR" ]; then
          echo "Error extracting Terraform outputs"
          exit 1
        fi

        # Set environment variables for the next step
        echo "S3_BUCKET=${S3_BUCKET}" >> $GITHUB_ENV
        echo "S3_WEBSITE_URL=${S3_WEBSITE_URL}" >> $GITHUB_ENV
      shell: bash

    - name: Deploy to S3
      run: |
        echo "Deploying to S3..."
        aws s3 sync ./build s3://${{ env.S3_BUCKET }} --delete
        aws s3 website s3://${{ env.S3_BUCKET }}/ --index-document index.html --error-document error.html
      env:
        AWS_REGION: "sa-east-1"
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
